gensbi.flow_matching.loss.continuous_loss
=========================================

.. py:module:: gensbi.flow_matching.loss.continuous_loss


Classes
-------

.. autoapisummary::

   gensbi.flow_matching.loss.continuous_loss.ContinuousFMLoss


Module Contents
---------------

.. py:class:: ContinuousFMLoss(path, reduction = 'mean')

   Bases: :py:obj:`flax.nnx.Module`


   
   ContinuousFMLoss is a class that computes the continuous flow matching loss.

   :param path: Probability path (x-prediction training).
   :type path: MixtureDiscreteProbPath
   :param reduction: Specify the reduction to apply to the output ``'none'`` | ``'mean'`` | ``'sum'``. ``'none'``: no reduction is applied to the output, ``'mean'``: the output is reduced by mean over sequence elements, ``'sum'``: the output is reduced by sum over sequence elements. Defaults to 'mean'.
   :type reduction: str, optional

   .. rubric:: Example

   .. code-block:: python

       from gensbi.flow_matching.loss import ContinuousFMLoss
       from gensbi.flow_matching.path import AffineProbPath
       from gensbi.flow_matching.path.scheduler import CondOTScheduler
       import jax, jax.numpy as jnp
       scheduler = CondOTScheduler()
       path = AffineProbPath(scheduler)
       loss_fn = ContinuousFMLoss(path)
       def vf(x, t, args=None):
           return x + t
       x_0 = jnp.zeros((8, 2))
       x_1 = jnp.ones((8, 2))
       t = jnp.linspace(0, 1, 8)
       batch = (x_0, x_1, t)
       loss = loss_fn(vf, batch)
       print(loss.shape)
       # ()















   ..
       !! processed by numpydoc !!

   .. py:method:: __call__(vf, batch, args = None, **kwargs)

      
      Evaluates the continuous flow matching loss.

      :param vf: The vector field model to evaluate.
      :type vf: callable
      :param batch: A tuple containing the input data (x_0, x_1, t).
      :type batch: tuple
      :param args: Additional arguments for the function.
      :type args: optional
      :param condition_mask: A mask to apply to the input data.
      :type condition_mask: optional
      :param \*\*kwargs: Additional keyword arguments for the function.

      :returns: The computed loss.
      :rtype: Array















      ..
          !! processed by numpydoc !!


   .. py:attribute:: path


